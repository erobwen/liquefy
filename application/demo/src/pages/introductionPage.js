import { Component, toPropertiesWithChildren } from "@liquefy/flow.core";

import { div, text, h1, h2, h3, p, ul, li, b, br, i, span, addDefaultStyle } from "@liquefy/flow.DOM";

import { portalContents, middle, fitContainerStyle } from "@liquefy/basic-ui";

function blue(...parameters) {
  const properties = toPropertiesWithChildren(parameters)
  addDefaultStyle(properties, {color: "blue"})
  return b(properties)
}

export class IntroductionPage extends Component {
  
  receive({topBarPortal}) {
    this.topBarPortal = topBarPortal;
  } 

  render() {
    return div(
      h1("Introduction to Flow"),
      p("Reactive front end framework, with an integrated state management system."),
      p(blue("Flow is radical, innovative and uses state of the art technology!")),
      h2("Notable features"),
      ul(
        li(blue("Generative approach."), " Everything is generated by javascript expressions"),
        li(blue("Reactive approach."), " Everything is reactive, from styling to built in state management."),
        li(blue("Component lifecycle control"), " allows you to control when components are created or disposed", br(), "allowing for off-screen components that maintain their state and DOM elements."),
        li(blue("Component-time portals"), " allows you to populate portals instantly without having to render them first."),
        li(blue("Mutability freedom"), " allows you to refer to and change any state or component from anywhere while maintaining safe and efficient updates."),
        li(blue("DOM transition animations"), " allows you to animate DOM-elements that move to another place in the DOM as well as appear or dissapear."),
        li("Supports ", blue("Javascript first methodology"), ". No need for jsx-parsing. No need for .css files. "),
        li("Supports ", blue("Programmatic responsive layout"), " making it possible to respond to container sizes on a component level."),
        li("Supports ", blue("Reactive Styling"), " where both style and components can be swapped out reactivley."),
        li("Provides ", blue("Minimal DOM updates"), " for fine grained change response and efficiency."),
      ),
      h2("This Demo"),
      p("Demonstrates the key features of flow, while showing how little code is needed to use them."),
      portalContents(
        middle(text("by Robert Renbris ")), 
        {
          portalExit: this.topBarPortal
        }
      ), 
      {
        style: {
          overflowWrap: "break-word", 
          margin: 30,
          ...fitContainerStyle
        }
      }
    )
  }
}

// middle()